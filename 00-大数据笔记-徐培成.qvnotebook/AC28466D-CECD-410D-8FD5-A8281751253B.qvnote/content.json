{
  "title": "07-HBase-0202-基本使用",
  "cells": [
    {
      "type": "markdown",
      "data": "## 1，HBase shell的使用\n* 登陆shell命令窗口\n  > hbase shell\n\n* 帮助\n  > help\n\n* 查看hbase的基本状态\n  > status\n\n* 显示namespace, 相当于显示数据库\n  > list_namespace\n\n* 创建名字空间namespace\n  > create_namespace 'ns1'\n\n* 显示某个namespace下的表\n  > list_namespace_tables 'ns1'\n\n* 创建表，下面NAME需要大写才行\n  > create 'ns1:t1', {NAME=>'f1'}\n  > create 'ns1:t2', 'f1' //如果只有一个列族，可以用这个，多个列族不行的哈\n\n* 查看表描述内容\n  > describe 'ns1:t1'\n\n* 给表插入数据,注意：hbase是nosql，插入的时候需要指定插入的目录是哪一行，那一列族，然后是这一列族的哪一列（一个列族中可以有多列），同时还有时间戳的概念，也就是如果对同一坐标的目标位置连续插入，就会通过更改时间戳进行保存，注意：这里不是覆盖。所以hbase就是三级定位：行，列(列族,具体列)和时间戳\n* 这个同时也算是更新操作，如果存在就更新，不存在保存哈\n  >  put 'ns1:t1', 'r1', 'f1:c1', 'ivanl001 is the king of world!'\n\n\n* 查询指定定位的内容,如下可以指定行列，也可以加上时间戳进行三级定位查询\n  >  get 'ns1:t1', 'r1', 'f1:c3'\n  > get 't1', 'r1', {TIMERANGE => [ts1, ts2]}\n\n* 删除指定内容\n  > delete 'storm:t1', 'r01', 'f1:word'\n\n* 获取递增的数据\n  > get_counter 'storm:t1', 'is', 'f1:is'\n\n\n* 扫描表，可以获取全部的行列数据，据说也能获取全部时间戳的数据，但是我在测试的时候只能获取最新的，可能是版本不一致或者是需要设置一下，先放着\n  > scan 'ns1:t1'\n\n* 删除表(需要先禁用表)\n  > disable 'ns1:t1'\n  > drop 'ns1:t1'\n\n* 统计表数据条数(每1000条统计一次)\n  > count 'ns1:t1'\n\n* 查看元数据表\n  > scan 'hbase:meta'\n\n* 手动切割表(测试的时候不是从正中切割，不过是在正中附近)\n  > split 'ns1:t1'\n\n* 手动指定切割key来切割表,\n  > split 'ns1:t1', 'r0500000'\n\n* 如果想要对切片再次切割，可以通过指定切片，其实也可以通过再次指定切割key\n  > split 'ns1:t1', 'r0800000'\n  > 指定切片还要找切片信息，麻烦死了， 这里不写了\n\n* 手动移动分区位置\n  > move '4bb967e0d3e223840ab6bf3a116c14eb', 'slave01,16020,1541985382287'\n  > move 'ENCODED_REGIONNAME', 'SERVER_NAME'\n\n* 手动合并两个分区(分区在不同的服务器上也是ok的)\n  > merge_region 'a6d80b2decb398ea4a31458ce3acfcdb', '8a620eecb41a8fbb25585e7d1f20273b'\n  > merge_region 'ENCODED_REGIONNAME', 'ENCODED_REGIONNAME'\n\n\n* 创建表的时候直接建立分区\n  > create 'ns2:t2', 'f1', SPLITS => ['r3333', 'r6666']\n  > create 'ns1:t1', 'f1', SPLITS => ['10', '20', '30', '40']\n\n* 然后如果插入的时候就会根据大小自动的进行分区到不同的分区上(虽然我们写入的是字符串，但是hbase实际存储的时候的rowKey是字节，所以不论你写的字节是什么内容， 都是有大小的， 所以总是能进行分区, 因为字节本身就可以当作数字)\n  > put 'ns2:t2', 'r9900', 'f1:name', 'ivanl000001'//这个会自动的分到>r6666的分区上\n  > 注意：写完之后要flush一下才能把数据写入到文件中去哈\n  > flush 'ns2:t2'\n\n\n* \n\n\n\n\n\n\n\n\n\n\n\n\n"
    }
  ]
}