{
  "title": "05-Serialization-0101-protobuf以及和java序列化对比",
  "cells": [
    {
      "type": "markdown",
      "data": "## 1，Protobuf的使用\n* 01, 如果没有安装protoc，需要先安装protoc\n* 02, 首先定义模型文件\n\n  ```protobuf\n  syntax = \"proto2\";\n\n  option java_package = \"im.ivanl001.bigData.Protobuf\";\n  option java_outer_classname = \"AddressBookProtos\";\n  message Person {\n  \n  \trequired string name = 1;\n  \trequired int32 id = 2; \n  \toptional string email = 3; \n  \n  \tenum PhoneType {\n  \t\tMOBILE = 0; \n  \t\tHOME = 1; \n  \t\tWORK = 2;\n  \t}\n  \n  \tmessage PhoneNumber {\n  \t\trequired string number = 1;\n  \t\toptional PhoneType type = 2 [default = HOME];\n  \t}\n  \trepeated PhoneNumber phone = 4;\n  }\n  \n  message AddressBook {\n  \trepeated Person person = 1;\n  }\n  ```\n  \n* 03，通过protoc编译模型文件为java模型\n  > protoc --java_out=. addressbook.proto\n\n* 04, 在03的指定位置，会生成java文件\n  ```java\n  //超级长，我这里不放代码了\n  ```\n  \n* 05，把代码放进项目中，然后使用模型，写入到文件\n\n  ```java\n   @Test\n    public void protobufWriteTest() throws IOException {\n  \n  \n        Long current = System.currentTimeMillis();\n        AddressBookProtos.Person person = AddressBookProtos.Person.newBuilder()\n                .setName(\"ivanl001\")\n                .setId(10120945)\n                .setEmail(\"ivanl001@163.com\")\n                .addPhone(AddressBookProtos.Person.PhoneNumber.newBuilder()\n                        .setNumber(\"13918667287\")\n                        .setType(AddressBookProtos.Person.PhoneType.HOME)\n                        .build()\n                ).build();\n  \n        person.writeTo(new FileOutputStream(\"/Users/ivanl001/Desktop/bigData/serialization/pro_person.data\"));\n  \n        Long current01 = System.currentTimeMillis();\n        System.out.println(\"duration:----:\" + (current01 - current));\n        //duration:----:83\n  \n    }\n  ```\n  \n* 06, 读取文件\n\n  ```java\n  @Test\n  public void protobufReadTest() throws Exception {\n  \n      Long current = System.currentTimeMillis();\n      AddressBookProtos.Person person = AddressBookProtos.Person.parseFrom(new FileInputStream(\"/Users/ivanl001/Desktop/bigData/serialization/pro_person.data\"));\n      System.out.println(person.getName());\n      System.out.println(person.getId());\n  \n      Long current01 = System.currentTimeMillis();\n      System.out.println(\"duration:----:\" + (current01 - current));\n      //duration:----:86\n      //duration:----:68\n  }\n  ```"
    },
    {
      "type": "markdown",
      "data": "## 2, 和java的序列化对比一下\n* 01, 定义模型\n\n  ```java\n  package im.ivanl001.bigData.Protobuf;\n\n  import java.io.Serializable;\n  \n  /**\n   * #author      : ivanl001\n   * #creator     : 2018-11-06 19:52\n   * #description : java序列化的演示模型\n   **/\n  public class Person implements Serializable {\n  \n      private int id;\n      private String name;\n      private String phoneNum;\n      private String email;\n  \n  \n      public String getEmail() {\n          return email;\n      }\n  \n      public void setEmail(String email) {\n          this.email = email;\n      }\n  \n      public int getId() {\n          return id;\n      }\n  \n      public void setId(int id) {\n          this.id = id;\n      }\n  \n      public String getName() {\n          return name;\n      }\n  \n      public void setName(String name) {\n          this.name = name;\n      }\n  \n      public String getPhoneNum() {\n          return phoneNum;\n      }\n  \n      public void setPhoneNum(String phoneNum) {\n          this.phoneNum = phoneNum;\n      }\n  }\n  ```\n  \n* 02, 写入读取文件\n\n  ```java\n  //------------------------------下面是java的序列化和反序列化的对比---------------------------------------\n    @Test\n    public void javaWriteTest() throws Exception {\n  \n        Long current = System.currentTimeMillis();\n        Person person = new Person();\n        person.setId(10120945);\n        person.setName(\"ivanl001\");\n        person.setEmail(\"ivanl001@163.com\");\n        person.setPhoneNum(\"13918667287\");\n  \n        ObjectOutputStream objectOutputStream = new ObjectOutputStream(new FileOutputStream(\"/Users/ivanl001/Desktop/bigData/serialization/java_person.data\"));\n        objectOutputStream.writeObject(person);\n  \n        objectOutputStream.close();\n  \n        Long current01 = System.currentTimeMillis();\n        System.out.println(\"duration:----:\" + (current01 - current));\n        //duration:----:29\n    }\n  \n  \n    @Test\n    public void javaReadTest() throws Exception {\n        Long current = System.currentTimeMillis();\n  \n        ObjectInputStream objectInputStream = new ObjectInputStream(new FileInputStream(\"/Users/ivanl001/Desktop/bigData/serialization/java_person.data\"));\n        Object object = objectInputStream.readObject();\n        Person person = (Person) object;\n        System.out.println(person.getId());\n        System.out.println(person.getName());\n  \n        Long current01 = System.currentTimeMillis();\n        System.out.println(\"duration:----:\" + (current01 - current));\n  \n        //duration:----:104\n    }\n  ```"
    }
  ]
}