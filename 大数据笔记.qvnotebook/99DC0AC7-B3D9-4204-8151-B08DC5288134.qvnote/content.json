{
  "title": "02-Linux基础-0600-另外一套教程的其他知识点",
  "cells": [
    {
      "type": "markdown",
      "data": "## 1，定时器\n> crontab -e后，出现vim编辑器，在里面输入你的命令，然后保存退出即可\n> crontab -l 查看当前用户的定时任务\n> crontab -r 删除当前用户的定时任务"
    },
    {
      "type": "markdown",
      "data": "crontab -e后，出现vim编辑器，在里面输入你的命令，然后保存退出即可\n\ncrontab -e保存后的命令是存在这个目录下面的：/var/spool/cron\n\nhttps://www.cnblogs.com/xd502djj/p/4292781.html\n\n\n* \\* * * * * minute hour day-of-month month-of-year day-of-week commands\n*  通配符*表示任何时间\n\n```\n\n其中\n\tMinute          一小时中的哪一分钟     [0～59]\n\thour            一天中的哪个小时       [0～23]\n\tday-of-month    一月中的哪一天         [1～31]\n\tmonth-of-year   一年中的哪一月         [1～12]\n\tday-of-week     一周中的哪一天         [0～6]  0表示星期天\n\tcommands        执行的命令\n\t\n\t1,全都不能为空，必须填入，不知道的值使用通配符*表示任何时间\n\t2,每个时间字段都可以指定多个值，不连续的值用,间隔，连续的值用-间隔。\n\t3,命令应该给出绝对路径\n\t4,用户必须具有运行所对应的命令或程序的权限\n\t\n\t\n    如何使用crontab 运行多个任务:\n    方法1：在crontab -e 里 写多个\n    输入命令  crontab –e  \n\n\t\n\t\n\t示例：\n      eg:4点备份\n      0 4 * * *\n      \n      eg:每周二，周五，下午6点的计划任务\n      0 18 * * 2,5\n      \n      eg:1到3月份，每周二周五，下午6点的计划任务\n      0 18 * 1-3 2,5\n      \n      eg:周一到周五下午，5点半提醒学生15分钟后关机\n      30 17 * * 1-5 /usr/bin/wall < /etc/issue\n      45 17 * * 1-5 /sbin/shutdown -h now\n      \n      eg:学校的计划任务， 12点14点，检查apache服务是否启动\n      */2 12-14 * 3-6,9-12 1-5\n      eg:再添加一个备份，把/etc目录备份到/backup下，然后把错误的情况也记录下来，正确的文件都丢到/dev/null下，看不见（相当于一个黑洞）\n      */2 12-14 * 3-6,9-12 1-5 /bin/cp -r /etc /backup/etc.20170407 2> /backup/etc.bak.err\n      /dev/null\n      \n      eg:每月 1、1 0、2 2日的4:45运行/apps/bin目录下的backup.sh\n      45 4 1,10,22 * * /apps/bin/backup.sh\n      \n      eg:每周六、周日的 1 : 10运行一个find命令\n      10 1 * * 6,0 /bin/find -name \"core\" -exec rm {} \\;\n      \n      eg:在每天 18:00至23 :00之间每隔30分钟运行/apps/bin目录下的dbcheck.sh\n      0,30 18-23 * * * /apps/bin/dbcheck.sh\n      \n      eg:每星期六的 11:00 pm运行/apps/bin目录下的qtrend.sh\n      0 23 * * 6 /apps/bin/qtrend.sh\n\t\n```"
    }
  ]
}