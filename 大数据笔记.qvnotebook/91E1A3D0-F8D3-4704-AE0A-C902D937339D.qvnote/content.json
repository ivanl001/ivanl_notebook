{
  "title": "09-Kafka-0101-基本介绍和简单使用",
  "cells": [
    {
      "type": "markdown",
      "data": "## 1，kafka的集群搭建\n* 01, 下载，解压，配置环境变量，过\n* 02，选择服务器， 更改配置文件server.properties\n  *我这里还是选择slave01, slave02, slave03三台服务器作为kafka集群*\n  ```shell\n  # 打开端口，这行默认注释，打开这行\n  listeners=PLAINTEXT://:9092\n  # 更改log的目录\n  log.dirs=/data/kafka/kafka-logs\n  # 配置zk的集群服务器\n  zookeeper.connect=slave01:2181,slave02:2181,slave03:2181\n  ```\n* 03，在我们选择的三台服务器上分别启动kafka, 后台运行\n  > kafka-server-start.sh /usr/local/kafka/config/server.properties &"
    },
    {
      "type": "markdown",
      "data": "## 2，kafka的使用\n\n* 01， kafka创建topics\n*partitions是分区数，replication-factor是每个分区的副本数量，存储位置是在配置文件中配置的，我们之前配置的是log.dirs=/data/kafka/kafka-logs*\n\n\n  > kafka-topics.sh --create --zookeeper slave01:2181 --replication-factor 3 --partitions 1 --topic test\n* 02, 查看主题\n  > kafka-topics.sh --list --zookeeper slave01:2181\n\n* 03, 启动生产者，只有生产者不会被注册到zk，所以就算slave01服务器死掉，topic已经在zk注册，依然能够正确的被消费的哈\n  > kafka-console-producer.sh --broker-list slave01:9092 --topic test\n\n* 04, 启动消费者(最好是另外一台机器, 这里选择slave02)\n  > kafka-console-consumer.sh --bootstrap-server slave01:9092 --topic test --from-beginning --zookeeper slave02:2181\n\n* 05，kafka的主题的分区副本的手动再移动平衡, 后面的是第一部分的第一个副本位置，第一部分的第二个副本的位置，中间用：分隔，然后逗号隔开表示第一部分划分完毕，注意：后面的是brokerId哈，不过好像更改不好用，也不报错\n  > kafka-topics.sh命令下的帮助：--replica-assignment  slave02:slave03, slave02:slave03\n \n  > kafka-topics.sh --alter --zookeeper slave02:2181 --topic test02 --replica-assignment 02:03,02:03,02:03,02:03,02:03\n\n  * brokerId之前不能有空格，创建指定分区是ok的\n  > kafka-topics.sh --create --zookeeper slave02:2181 --topic test05 --replica-assignment 02:03,02:03,02:03,02:03,02:03\n"
    }
  ]
}