{
  "title": "04-Hive-0101-Hive的基本介绍和安装",
  "cells": [
    {
      "type": "markdown",
      "data": "## 1，Hive介绍\n* hive是数据仓库，OLAP， online analyze process, 在线分析处理，延迟性高\n* 数据库， OLTP， online transaction process, 在线事务处理， 实时性比较好\n* Hive的工作流程：\n* \n* ![IMAGE](quiver-image-url/B4FBED606EC672351F9324DB46EF2BEB.jpg =719x552)\n\n* hive\n  * 数据仓库,在线分析处理。\n  * HiveQL,类似sql语言\n  * 表内容存在：metadata->rdbms\n  * hive处理的数据存在：hdfs\n"
    },
    {
      "type": "markdown",
      "data": "## 2, Hive安装流程"
    },
    {
      "type": "markdown",
      "data": "### 2.1, Hive安装之前需要先安装mysql, 在centos7下安装mysql流程如下：\n*现在已经用MariaDB完全取代msyql，而是使用方法完全一致，并且安装更方便一些，安装方法如下：*\n* 01， 使用yum直接安装MariaDB\n  > yum -y install mariadb*\n* 02, 开启服务，并设置开机启动\n  > systemctl start mariadb.service\n  > systemctl enable mariadb.service\n* 03, 尝试登陆,刚开始是没有密码的，应该可以直接登陆成功\n  > mysql\n* 04，如果成功之后，退出，设置密码\n  > exit;\n  > mysql_secure_installation;\n* 05，提示输入密码，如果是刚装的，密码是空，直接enter即可，然后输入用户和密码，按照提示操作即可\n* 06, 都成功之后，可以按照正常流程进行登陆即可\n  > mysql -u root -p *****   //root是你设置的用户名\n* 07， 默认情况下，外部是不能直接连接我们的数据库的，需要更改设置,并刷新权限\n  * 这里是可以设置不同的用户名和不同的密码的哦，好强大的样子\n  > GRANT ALL PRIVILEGES ON *.* TO 'root'@'%'IDENTIFIED BY ',.' WITH GRANT OPTION;\n  > flush privileges;"
    },
    {
      "type": "markdown",
      "data": "### 2.2, Hive的安装配置\n* 01, 解压，配置环境变量就不说了\n* 02, 修改配置文件，重命名hive-default.xml.template为hive-site.xml，注意：这里一定要有hive-site.xml，仅仅有hive-default.xml是不行的！！！被坑过\n* 03, 修改配置信息，注意下面需要创建一个mysql数据库，配置在下面\n  ```xml\n  <property>\n    <name>javax.jdo.option.ConnectionDriverName</name>\n    <value>com.mysql.jdbc.Driver</value>\n    <description>Driver class name for a JDBC metastore</description>\n  </property>\n\n  <property>\n    <name>javax.jdo.option.ConnectionURL</name>\n    <value>jdbc:mysql://master:3306/hive</value>\n    <description>\n      我们这里的数据都存储到master一台机器的数据库中去\n      JDBC connect string for a JDBC metastore.\n      To use SSL to encrypt/authenticate the connection, provide database-specific SSL flag in the connection URL.\n      For example, jdbc:postgresql://myhost/db?ssl=true for postgres database.\n    </description>\n  </property>\n\n  <property>\n    <name>javax.jdo.option.ConnectionUserName</name>\n    <value>root</value>\n    <description>Username to use against metastore database</description>\n  </property>\n\n  <property>\n    <name>javax.jdo.option.ConnectionPassword</name>\n    <value>,.</value>\n    <description>password to use against metastore database</description>\n  </property>\n  ```\n* 04, 同时建议把路径地址换到指定的地址，如下配置\n  ```xml\n  <property>\n    <name>hive.exec.local.scratchdir</name>\n    <value>/data/hive</value>\n    <description>Local scratch space for Hive jobs</description>\n  </property>\n  \n  <property>\n    <name>hive.querylog.location</name>\n    <value>/data/hive</value>\n    <description>Location of Hive run time structured log file</description>\n  </property>\n  \n  <property>\n    <name>hive.server2.logging.operation.log.location</name>\n    <value>/data/hive/operation_logs</value>\n    <description>Top level directory where operation logs are stored if logging functionality is enabled</description>\n  </property>\n  ```\n\n* 05, 修改下面这个配置，好像是允许访问\n  ```xml\n  <property>\n    <name>hive.server2.enable.doAs</name>\n    <value>false</value>\n    <description>\n      Setting this property to true will have HiveServer2 execute\n      Hive operations as the user making the calls to it.\n    </description>\n  </property>\n  ```\n* 06，初始化hive的数据信息到mysql数据库中去\n  > schematool -dbType mysql -initSchema\n* 07, 查看数据库中指定的库是不是多了好多表,如果ok，输入hive，等待进入命令行中即可， 这个等待可能要比较久\n  > hive\n"
    },
    {
      "type": "markdown",
      "data": ""
    }
  ]
}